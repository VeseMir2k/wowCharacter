{"version":3,"sources":["components/Form.js","components/Character.js","components/Equipment.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","className","placeholder","name","type","onChange","handleChange","map","region","key","onClick","handleClick","Character","this","characterData","mediaData","realm","en_US","level","src","avatar_url","alt","gender","faction","race","character_class","active_spec","React","Component","Equipment","mediaEquipment","data","item","index","OverlayTrigger","overlay","Tooltip","id","equipment","equipped_items","inventory_type","assets","value","App","state","accessToken","character","isReady","mediaCharacter","isReadyData","authorizationApi","btoa","process","fetchAPI","fetch","body","headers","Authorization","method","then","response","json","setState","access_token","fetchCharacter","toLowerCase","status","alert","prev","fetchMediaCharacter","fetchEquipment","catch","error","console","media","href","imgMediaEquipment","fetchMediaEquipment","isReadyDataReset","e","target","preventDefault","componentDidMount","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9d9fae5d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Form(props) {\r\n  const regions = [\"EU\", \"US\", \"TW\", \"KR\", \"CN\"];\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label>\r\n          Nazwa postaci:\r\n          <input\r\n            placeholder=\"thomgnar\"\r\n            name=\"name\"\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            onChange={props.handleChange}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>\r\n          Nazwa serwera:\r\n          <input\r\n            placeholder=\"burning-legion\"\r\n            name=\"realm\"\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            onChange={props.handleChange}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>\r\n          Nazwa regionu:\r\n          <select\r\n            name=\"region\"\r\n            className=\"form-control\"\r\n            onChange={props.handleChange}\r\n          >\r\n            {regions.map((region) => (\r\n              <option key={region}>{region}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={props.handleClick}>\r\n        Szukaj\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nclass Character extends React.Component {\r\n  render() {\r\n    const { characterData, mediaData } = this.props;\r\n    return (\r\n      <div className=\"text-center\">\r\n        <h1>{characterData.name}</h1>\r\n        <p>\r\n          {characterData.realm.name.en_US} {characterData.level}\r\n        </p>\r\n        <img src={mediaData.avatar_url} className=\"rounded\" alt=\"avatar\" />\r\n        <p>Płeć: {characterData.gender.name.en_US}</p>\r\n        <p>Frakcja: {characterData.faction.name.en_US}</p>\r\n        <p>Rasa: {characterData.race.name.en_US}</p>\r\n        <p>Klasa: {characterData.character_class.name.en_US}</p>\r\n        <p>Specjalizacja: {characterData.active_spec.name.en_US}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport \"react-bootstrap/Popover\";\r\n\r\nfunction Equipment(props) {\r\n  return (\r\n    <div className=\"text-center\">\r\n      {props.mediaEquipment.data.map((item, index) => (\r\n        <OverlayTrigger\r\n          key={index}\r\n          overlay={\r\n            <Tooltip id=\"tooltip-disabled\">\r\n              <p>\r\n                {\r\n                  props.equipment.equipped_items[index].inventory_type.name\r\n                    .en_US\r\n                }\r\n              </p>\r\n              <p>{props.equipment.equipped_items[index].name.en_US}</p>\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <img src={item.assets[0].value} alt={index} key={index} />\r\n        </OverlayTrigger>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Equipment;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"./components/Form.js\";\nimport Character from \"./components/Character.js\";\nimport Equipment from \"./components/Equipment.js\";\n\nclass App extends React.Component {\n  state = {\n    accessToken: \"\",\n    name: \"thomgnar\",\n    realm: \"burning-legion\",\n    region: \"EU\",\n    character: { data: null, isReady: false },\n    mediaCharacter: { data: null, isReady: false },\n    equipment: { data: null, isReady: false },\n    mediaEquipment: { data: [], isReady: false },\n    isReadyData: false,\n  };\n\n  // CLIENT_ID i CLIENT_SECRET na BASE64\n  authorizationApi = btoa(\n    `${process.env.REACT_APP_CLIENT_ID}:${process.env.REACT_APP_CLIENT_SECRET}`\n  );\n\n  fetchAPI = () => {\n    fetch(\"https://us.battle.net/oauth/token\", {\n      body: \"grant_type=client_credentials\",\n      headers: {\n        Authorization: `Basic ${this.authorizationApi}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      method: \"POST\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ accessToken: data.access_token });\n      });\n  };\n\n  fetchCharacter = () => {\n    fetch(\n      `https://${this.state.region.toLowerCase()}.api.blizzard.com/profile/wow/character/${\n        this.state.realm\n      }/${\n        this.state.name\n      }?namespace=profile-${this.state.region.toLowerCase()}&access_token=${\n        this.state.accessToken\n      }`\n    )\n      .then((response) => {\n        if (response.status === 404 || response.status === 401) {\n          alert(\"Wprowadź poprawne dane!!!\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        this.setState((prev) => ({\n          character: { ...prev.character, data, isReady: true },\n        }));\n        this.fetchMediaCharacter();\n        this.fetchEquipment();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchMediaCharacter = () => {\n    fetch(\n      `${this.state.character.data.media.href}&access_token=${this.state.accessToken}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState((prev) => ({\n          mediaCharacter: { ...prev.mediaCharacter, data, isReady: true },\n        }));\n      });\n  };\n\n  fetchEquipment = () => {\n    fetch(\n      `${this.state.character.data.equipment.href}&access_token=${this.state.accessToken}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState((prev) => ({\n          equipment: { ...prev.equipment, data, isReady: true },\n        }));\n        this.imgMediaEquipment();\n      });\n  };\n\n  fetchMediaEquipment = (item) => {\n    fetch(`${item.media.key.href}&access_token=${this.state.accessToken}`)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState((prev) => ({\n          mediaEquipment: {\n            ...prev.mediaEquipment,\n            data: [...prev.mediaEquipment.data, data],\n            isReady: true,\n          },\n        }));\n        this.isReadyData();\n      });\n  };\n\n  imgMediaEquipment = () => {\n    this.state.equipment.data.equipped_items.map((item) =>\n      this.fetchMediaEquipment(item)\n    );\n  };\n\n  isReadyData = () => {\n    const { character, mediaCharacter, equipment, mediaEquipment } = this.state;\n\n    if (\n      character.isReady &&\n      mediaCharacter.isReady &&\n      equipment.isReady &&\n      mediaEquipment.isReady\n    ) {\n      this.setState({ isReadyData: true });\n    }\n  };\n\n  isReadyDataReset = () => {\n    const { isReadyData } = this.state;\n\n    if (isReadyData) {\n      this.setState((prev) => ({\n        isReadyData: false,\n        character: { ...prev.character, isReady: false },\n        mediaCharacter: { ...prev.mediaCharacter, isReady: false },\n        equipment: { ...prev.equipment, isReady: false },\n        mediaEquipment: { ...prev.mediaEquipment, data: [], isReady: false },\n      }));\n    }\n  };\n\n  handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.isReadyDataReset();\n    this.fetchCharacter();\n  };\n\n  componentDidMount = () => {\n    this.fetchAPI();\n  };\n\n  render() {\n    const {\n      character,\n      mediaCharacter,\n      equipment,\n      mediaEquipment,\n      isReadyData,\n    } = this.state;\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <Form\n                handleChange={this.handleChange}\n                handleClick={this.handleClick}\n              />\n            </div>\n          </div>\n          {isReadyData ? (\n            <div className=\"row\">\n              <div className=\"col\">\n                <Character\n                  characterData={character.data}\n                  mediaData={mediaCharacter.data}\n                />\n                <Equipment\n                  equipment={equipment.data}\n                  mediaEquipment={mediaEquipment}\n                />\n              </div>\n            </div>\n          ) : (\n            false\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}